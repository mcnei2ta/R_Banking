library(shiny)
library(shinydashboard)
library(dplyr)
library(DT)

############################################### HEADER ##################################################
header <- dashboardHeader()

############################################### SIDEBAR ##################################################
sidebar <- dashboardSidebar(
  sidebarMenu(
    # Create two `menuItem()`s, "Dashboard" and "Inputs"
    menuItem(
      text = "Spending Details",
      tabName = "spending_table"
    ),
    menuItem(
      text = "Spending Summary",
      tabName = "spending_graph"
    )
  )
)

############################################### BODY ##################################################
body <- dashboardBody(
  tabItems(
    # Add two tab items, one with tabName "dashboard" and one with tabName "inputs"
    tabItem(tabName = "spending_table",
              fluidPage(
                # column(
                #   width = 1,
                #   checkboxGroupInput("show_vars","Show Columns:", names(spending), selected = names(spending))
                # ),
              column(
                width = 12,
                box(
                  width = NULL,
                  title = "Credit and Debit Transactions",
                  DT::dataTableOutput("mytable1")
                ))
            )),
    tabItem(tabName = "spending_graph")
 )
)

############################################### UI / SERVER ##################################################
# Create the UI using the header, sidebar, and body
ui <- dashboardPage(header, sidebar, body, title = "Spending")

#spending_data <- load("C:/Users/592798/Documents/Monthly Spending Reports/04252020_Updated/spending_data.rda")
min_date <- format(as.Date(min(spending$Date), "%Y-%m-%d"), "%m/%d/%Y")
max_date <- format(as.Date(max(spending$Date), "%Y-%m-%d"), "%m/%d/%Y")
description <- paste0("This table includes all debit and credit transactions occurring from ", min_date, " through ", max_date, ".")

server <- function(input, output) {
  # data
  options(DT.options = list(
    pageLength = 50,
    dom = 'ltipr', #lftipr
    autoWidth = TRUE,
    columnDefs = list(
      list(
      targets = 2:4,
      render = JS(
        "function(data, type, row, meta) {",
        "return type === 'display' && data.length > 20 ?",
        "'<span title=\"' + data + '\">' + data.substr(0, 20) + '...</span>' : data;",
        "}")),
      list(width = '900px', targets = 2:4)
    )
    ), callback = JS('table.page(3).draw(false);')
    )
  output$mytable1 <- DT::renderDataTable({
    DT::datatable(spending[, names(spending) != "Description"],                            # w check boxes: [, input$show_vars, drop = FALSE]
                  selection = 'single', 
                  rownames = F, 
                  caption = description, 
                  filter = 'top')
  })
}

shinyApp(ui, server)
